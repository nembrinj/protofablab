[
    {
        "id": "0de15d8c3155b5e8",
        "type": "tab",
        "label": "LED-communication",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "abdef25bc7903c19",
        "type": "ui-group",
        "name": "Orders Status",
        "page": "a7e23c182576fd11",
        "width": "6",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "6deab72dfb72c0e7",
        "type": "ui-group",
        "name": "Robot Status",
        "page": "a7e23c182576fd11",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "22ac944233e5752f",
        "type": "mqtt-broker",
        "name": "RaspberryPiDRM",
        "broker": "raspberrypidrm.local",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "22b084d9dfb9dbf9",
        "type": "ros-server",
        "url": "ws://profab.local:9090"
    },
    {
        "id": "a7e23c182576fd11",
        "type": "ui-page",
        "name": "Page 1",
        "ui": "cc0949821912be7b",
        "path": "/page1",
        "icon": "home",
        "layout": "grid",
        "theme": "3011e5abeeb7eac2",
        "breakpoints": [
            {
                "name": "Default",
                "px": 0,
                "cols": 3
            },
            {
                "name": "Tablet",
                "px": 576,
                "cols": 6
            },
            {
                "name": "Small Desktop",
                "px": 768,
                "cols": 9
            },
            {
                "name": "Desktop",
                "px": 1024,
                "cols": 12
            }
        ],
        "order": 2,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "cc0949821912be7b",
        "type": "ui-base",
        "name": "My Dashboard",
        "path": "/dashboard",
        "appIcon": "",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "showPageTitle": true,
        "navigationStyle": "default",
        "titleBarStyle": "default"
    },
    {
        "id": "3011e5abeeb7eac2",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094CE",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "c7d842345bff9aca",
        "type": "function",
        "z": "0de15d8c3155b5e8",
        "name": "Add Order",
        "func": "let orders = global.get(\"orders\") || [];\norders.push(msg.payload);\nglobal.set(\"orders\", orders);\n\nmsg.payload = orders.join(\"<br>\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nlet orders = [];",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 220,
        "wires": [
            [
                "c596767795016c67",
                "bbc98fa136ed429d"
            ]
        ]
    },
    {
        "id": "c596767795016c67",
        "type": "ui-text",
        "z": "0de15d8c3155b5e8",
        "group": "abdef25bc7903c19",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Orders",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 850,
        "y": 220,
        "wires": []
    },
    {
        "id": "5dfbae8980538390",
        "type": "ui-text",
        "z": "0de15d8c3155b5e8",
        "group": "6deab72dfb72c0e7",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Red LED",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#cc0000",
        "className": "",
        "x": 1240,
        "y": 480,
        "wires": []
    },
    {
        "id": "5b6927cdf1385e3f",
        "type": "ui-text",
        "z": "0de15d8c3155b5e8",
        "group": "6deab72dfb72c0e7",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Blue LED",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#3465a4",
        "className": "",
        "x": 1240,
        "y": 540,
        "wires": []
    },
    {
        "id": "d1b01619fd7886a3",
        "type": "ui-text",
        "z": "0de15d8c3155b5e8",
        "group": "6deab72dfb72c0e7",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Yellow LED",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#edd400",
        "className": "",
        "x": 1230,
        "y": 600,
        "wires": []
    },
    {
        "id": "656aeaf71516a91a",
        "type": "ui-button",
        "z": "0de15d8c3155b5e8",
        "group": "6deab72dfb72c0e7",
        "name": "",
        "label": "Robot is back",
        "order": 7,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "back",
        "payloadType": "str",
        "topic": "is_back",
        "topicType": "str",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 180,
        "y": 540,
        "wires": [
            [
                "4f7c04a7986df8f7"
            ]
        ]
    },
    {
        "id": "69c93ec0023ed840",
        "type": "function",
        "z": "0de15d8c3155b5e8",
        "name": "LED control",
        "func": "let topic_in = msg.topic;\nlet payload_in = msg.payload;\n\nmsg.payload = {\n    \"red\": \"off\",\n    \"blue\": \"off\",\n    \"yellow\": \"off\"\n}\n\nif (topic_in == \"robot_order\") {\n    if (payload_in == \"red\") {\n        msg.payload.red = \"on\";\n    } else if (payload_in == \"blue\") {\n        msg.payload.blue = \"on\";\n    } else if (payload_in == \"yellow\") {\n        msg.payload.yellow = \"on\";\n    }\n}\n\nif (topic_in == \"is_can_in_holder\") {\n    if (payload_in == true) {\n        msg.payload = {\n            \"red\": \"on\",\n            \"blue\": \"on\",\n            \"yellow\": \"on\"\n        }\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 540,
        "wires": [
            [
                "27baab88626954e2",
                "2e44ea5281a90836",
                "def61fbf50680fcb"
            ]
        ]
    },
    {
        "id": "27baab88626954e2",
        "type": "function",
        "z": "0de15d8c3155b5e8",
        "name": "red LED control",
        "func": "let status = msg.payload.red;\nmsg.payload = status;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 480,
        "wires": [
            [
                "5dfbae8980538390"
            ]
        ]
    },
    {
        "id": "def61fbf50680fcb",
        "type": "function",
        "z": "0de15d8c3155b5e8",
        "name": "yellow LED control",
        "func": "let status = msg.payload.yellow;\nmsg.payload = status;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 600,
        "wires": [
            [
                "d1b01619fd7886a3"
            ]
        ]
    },
    {
        "id": "2e44ea5281a90836",
        "type": "function",
        "z": "0de15d8c3155b5e8",
        "name": "blue LED control",
        "func": "let status = msg.payload.blue;\nmsg.payload = status;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 540,
        "wires": [
            [
                "5b6927cdf1385e3f"
            ]
        ]
    },
    {
        "id": "bbc98fa136ed429d",
        "type": "function",
        "z": "0de15d8c3155b5e8",
        "name": "Serve Order",
        "func": "let orders = global.get(\"orders\") || [];\nlet position = global.get(\"position\") || \"gone\";\n\nif ((msg.payload == \"back\" || position == \"back\") && orders.length > 0) {\n    msg.payload = orders[0];\n} else {\n    msg.payload = null;\n}\n\nmsg.topic = \"robot_order\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 420,
        "wires": [
            [
                "69c93ec0023ed840"
            ]
        ]
    },
    {
        "id": "f01fb5cc33c57138",
        "type": "function",
        "z": "0de15d8c3155b5e8",
        "name": "Remove Order",
        "func": "let orders = global.get(\"orders\") || [];\n\n// I think we can change the topic to \"move_base_simple/goal\"\nif (msg.topic == \"is_can_in_holder\") {\n    if (orders.length > 0 && msg.payload == true) {\n        orders.shift();\n    }\n}\n\nglobal.set(\"orders\", orders);\n\nmsg.payload = orders.join(\"<br>\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nlet orders = [];",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 340,
        "wires": [
            [
                "c596767795016c67"
            ]
        ]
    },
    {
        "id": "eeef9bd20cb55dc7",
        "type": "ui-text",
        "z": "0de15d8c3155b5e8",
        "group": "6deab72dfb72c0e7",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Robot Position",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 460,
        "y": 620,
        "wires": []
    },
    {
        "id": "4f7c04a7986df8f7",
        "type": "function",
        "z": "0de15d8c3155b5e8",
        "name": "Set Robot position",
        "func": "// I think topic can be changed to \"move_base_simple/goal\"\nif (msg.topic == \"is_can_in_holder\") {\n    msg.payload = \"gone\";\n    global.set(\"position\", \"false\");\n} else {\n    global.set(\"position\", msg.payload);\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 520,
        "wires": [
            [
                "eeef9bd20cb55dc7",
                "bbc98fa136ed429d"
            ]
        ]
    },
    {
        "id": "1a74339ccffc0209",
        "type": "ui-button",
        "z": "0de15d8c3155b5e8",
        "group": "6deab72dfb72c0e7",
        "name": "",
        "label": "Robot is gone",
        "order": 3,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "gone",
        "payloadType": "str",
        "topic": "is_back",
        "topicType": "str",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 180,
        "y": 500,
        "wires": [
            [
                "4f7c04a7986df8f7"
            ]
        ]
    },
    {
        "id": "83856e4ccce07cd7",
        "type": "mqtt in",
        "z": "0de15d8c3155b5e8",
        "name": "Order Red Drink",
        "topic": "color/drink1",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "22ac944233e5752f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 180,
        "wires": [
            [
                "c7d842345bff9aca"
            ]
        ]
    },
    {
        "id": "769137c7ae6962f0",
        "type": "mqtt in",
        "z": "0de15d8c3155b5e8",
        "name": "Move",
        "topic": "move_base_simple/goal",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "22ac944233e5752f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 400,
        "wires": [
            [
                "f01fb5cc33c57138",
                "69c93ec0023ed840",
                "029ce87deb7c3125"
            ]
        ]
    },
    {
        "id": "94f1cda79352b2b2",
        "type": "ros-publish",
        "z": "0de15d8c3155b5e8",
        "server": "22b084d9dfb9dbf9",
        "topicname": "move_base_simple/goal",
        "typepackage": "",
        "typename": "String",
        "stampheader": false,
        "x": 810,
        "y": 680,
        "wires": []
    },
    {
        "id": "029ce87deb7c3125",
        "type": "function",
        "z": "0de15d8c3155b5e8",
        "name": "Send Move Command To TIAGo",
        "func": "if (msg.topic == \"go_to_customer\") {\n    msg.payload = \"{\\\"linear\\\": {\\\"x\\\": 1,\\\"y\\\":0,\\\"z\\\":0}, angular\\\": {\\\"x\\\":0, \\\"y\\\": 0, \\\"z\\\": 0}}\"\n} else if (msg.topic == \"go_to_bartender\") {\n    msg.payload = \"{\\\"linear\\\": {\\\"x\\\": 1,\\\"y\\\":0,\\\"z\\\":0}, angular\\\": {\\\"x\\\":0, \\\"y\\\": 0, \\\"z\\\": 0}}\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 400,
        "wires": [
            [
                "90e3c9313579ebb5"
            ]
        ]
    },
    {
        "id": "90e3c9313579ebb5",
        "type": "json",
        "z": "0de15d8c3155b5e8",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 650,
        "y": 600,
        "wires": [
            [
                "94f1cda79352b2b2"
            ]
        ]
    },
    {
        "id": "31e4ece26d016ed8",
        "type": "ui-button",
        "z": "0de15d8c3155b5e8",
        "group": "6deab72dfb72c0e7",
        "name": "Go To Customer",
        "label": "Go To Customer",
        "order": 3,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "go_to_customer",
        "topicType": "str",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 180,
        "y": 260,
        "wires": [
            [
                "029ce87deb7c3125"
            ]
        ]
    },
    {
        "id": "c791945e2fd6da88",
        "type": "ui-button",
        "z": "0de15d8c3155b5e8",
        "group": "6deab72dfb72c0e7",
        "name": "Go To Bartender",
        "label": "Go To Bartender",
        "order": 3,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "go_to_bartender",
        "topicType": "str",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 180,
        "y": 300,
        "wires": [
            [
                "029ce87deb7c3125"
            ]
        ]
    }
]